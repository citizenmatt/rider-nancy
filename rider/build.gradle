buildscript {
    ext.kotlin_version = '1.1.3-2'
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "1.1.3-2"
    id 'org.jetbrains.intellij' version '0.2.14'
}

group 'com.jetbrains'
version '1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}

intellij {
    type = 'RD'
    version = '171.4456.1432' // 2017.1 RC
    downloadSources = false
}

task zipTemplate(type: Zip) {
    from 'templates/NancyApp'
    include '**/*'
    archiveName 'NancyApp.zip'
    destinationDir file('src/main/resources/projects')
}
processResources.dependsOn zipTemplate



// Allow debugging ReSharperHost
runIde {
    systemProperties = [
        'rider.debug.mono.debug': true,
        'rider.debug.mono.allowConnect': true
    ]
}

// Reset execute permissions after extracting from zip file
project.afterEvaluate {
    if (System.getProperty('os.name').toLowerCase().contains('mac os')) {
        def dep = file("$projectDir/build/rider$intellij.type-$intellij.version")
        if (dep.exists()) {
            exec {
                it.commandLine 'chmod', '744', "$projectDir/build/rider$intellij.type-$intellij.version/lib/ReSharperHost/runtime.sh"
                it.commandLine 'chmod', '744', "$projectDir/build/rider$intellij.type-$intellij.version/lib/ReSharperHost/macos-x64/mono/bin/mono-sgen"
            }
        }
    }
}
